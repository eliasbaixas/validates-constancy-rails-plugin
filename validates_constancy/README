== ValidatesConstancy for Active Record

http://constancy.rubyforge.org


=== Introduction

This Rails plugin allows you to prevent particular database fields from being
changed after a record is created. A validation error occurs on updates if an
attribute of a model object is different from its value in the database.


=== Installing Validates Constancy

Various versions of the Rails framework are supported. Each supported version of
Rails has a branch dedicated to it in the Validates Constancy repository. If you
are using Rails v1.2.3, you can install the compatible version of the plugin
with the command:

  ruby script/plugin install svn://rubyforge.org/var/svn/constancy/branches/rails_1-2-3/validates_constancy

If you are on edge Rails, install Validates Constancy from trunk:

  ruby script/plugin install svn://rubyforge.org/var/svn/constancy/trunk/validates_constancy


=== Using constancy validation

Here’s how to use this validation in your code.

  class Person < ActiveRecord::Base
    
    # Prevent changes to Person#social_security_number.
    validates_constancy_of :social_security_number
    
  end


==== Options

The validation takes two options, <tt>:if</tt> and <tt>:message</tt>. These may
be familiar because several of ActiveRecord’s validations also use them. The
<tt>:if</tt> option takes a Proc, or a symbol, or string with a model object
argument and a return value of +true+ or +false+.

  class Comment < ActiveRecord::Base
    
    # Prevent changes to Comment#text if it is “locked.”
    validates_constancy_of :text, :if => Proc.new { |comment| comment.locked? }
    
  end

The default error message is “can’t be changed”. Use your own error message by
specifying the <tt>:message</tt> option.

  class LicensePlate < ActiveRecord::Base
    
    # Prevent changes to LicensePlate#number.
    validates_constancy_of :number,
                           :message => 'is off-limits! What are you thinking?'
    
  end

More than one model attribute can be specified. Any specified options will be
applied to all the specified attributes.


==== Warning

With associations, validate the constancy of a foreign key, not the instance
variable itself: <tt>validates_constancy_of :invoice_id</tt> instead of
<tt>validates_constancy_of :invoice</tt>.


=== Running automated tests for Validates Constancy

There’s a suite of tests that exercises all the functionality of the Validates
Constancy plugin. You can check out versions of the test suite from the
repository according to the version of Rails it works with. For Rails v1.2.3,
check out
svn://rubyforge.org/var/svn/constancy/branches/rails_1-2-3/integration_test_rails_project.
For edge Rails, check out
svn://rubyforge.org/var/svn/constancy/trunk/integration_test_rails_project.

Then read integration_test_rails_project/doc/README_FOR_APP to learn how to run
the tests.


=== Credits

Copyright © 2007 Nils Jonsson (mailto:nils@alumni.rice.edu)

Released under the MIT license.
